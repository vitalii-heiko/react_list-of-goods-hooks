{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","started","setStarted","reversed","setReversed","NONE","sortType","setSortType","goods","isReversed","visibleGoods","sort","g1","g2","ALPHABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAgBKA,E,oDAbCC,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAASH,EAASQ,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EA/BR,SACEA,EACAF,EACAG,GAEA,IAAMC,EAAY,YAAOF,GAczB,OAZAE,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQP,GACN,KAAKT,EAASiB,SACZ,OAAOF,EAAGG,cAAcF,GAE1B,KAAKhB,EAASmB,OACZ,OAAOJ,EAAGK,OAASJ,EAAGI,OACxB,QACE,OAAO,MAITR,EACKC,EAAaQ,UAGfR,EAQOS,CAAkBrB,EAAiBQ,EAAUH,GAE3D,OACE,sBAAKiB,UAAU,MAAf,WACInB,GACA,wBACEoB,KAAK,SACLC,QAAS,kBAAMpB,GAAW,IAF5B,mBAQDD,GACC,qCACE,wBACEoB,KAAK,SACLC,QAAS,kBAAMf,EAAYV,EAASiB,WAFtC,iCAOA,wBACEO,KAAK,SACLC,QAAS,kBAAMf,EAAYV,EAASmB,SAFtC,4BAOA,wBACEK,KAAK,SACLC,QAAS,kBAAMlB,GAAaD,IAF9B,qBAOA,wBACEkB,KAAK,SACLC,QAAS,WACPf,EAAYV,EAASQ,MACrBD,GAAY,IAJhB,mBAUA,oBAAIgB,UAAU,QAAd,SACGZ,EAAMe,KAAI,SAAAC,GAAI,OACb,oBAEEJ,UAAU,cAFZ,SAIGI,GAHIA,eCnGrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.477325f3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [started, setStarted] = useState(false);\n  const [reversed, setReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const goods = getReorderedGoods(goodsFromServer, sortType, reversed);\n\n  return (\n    <div className=\"App\">\n      {!started && (\n        <button\n          type=\"button\"\n          onClick={() => setStarted(true)}\n        >\n          Start\n        </button>\n      )}\n\n      {started && (\n        <>\n          <button\n            type=\"button\"\n            onClick={() => setSortType(SortType.ALPHABET)}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => setSortType(SortType.LENGTH)}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => setReversed(!reversed)}\n          >\n            Reverse\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={() => {\n              setSortType(SortType.NONE);\n              setReversed(false);\n            }}\n          >\n            Reset\n          </button>\n\n          <ul className=\"Goods\">\n            {goods.map(good => (\n              <li\n                key={good}\n                className=\"Goods__item\"\n              >\n                {good}\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}